name: Integration
on:
  pull_request:
    branches: [ main ]
    paths:
      - '**gradle*'
      - '**.api'
      - '**.java'
      - '**.kt*'
      - '!.github/workflows/gradle-wrapper-upgrade.yml'
      - .github/workflows/integration.yml
      - gradle/libs.versions.toml
      - gradle/wrapper/
      - yarn.lock
  push:
    branches: [ main ]
    paths:
      - '**gradle*'
      - '**.api'
      - '**.java'
      - '**.kt*'
      - '!.github/workflows/gradle-wrapper-upgrade.yml'
      - .github/workflows/integration.yml
      - gradle/libs.versions.toml
      - gradle/wrapper/
      - yarn.lock
  workflow_dispatch:
jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2
      - name: Setup Java
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0
        with:
          gradle-home-cache-cleanup: true
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2.1.2
      - name: Check Gradle plugins
        run: ./gradlew :plugins:check
      - name: Check internals
        run: ./gradlew :types-internal:check
      - name: Check library
        run: ./gradlew :types:check
      - name: Check Java compatibility
        run: ./gradlew :java-compatibility:check
      - name: Check samples
        run: ./gradlew :samples:check
      - name: Check support of kotlinx.serialization
        run: ./gradlew :types-kotlinx-serialization:check
  dependency-submission:
    name: Dependency submission
    needs: checks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3.1.0
